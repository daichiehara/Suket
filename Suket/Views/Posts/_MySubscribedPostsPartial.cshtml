@using Microsoft.AspNetCore.Identity;
@model IEnumerable<Suket.Models.Post>
@inject UserManager<UserAccount> userManager;
@inject SignInManager<UserAccount> signInManager;

@{
    var currentUser = ViewData["CurrentUser"] as UserAccount;
    var isLoggedIn = (bool)ViewData["IsLoggedIn"];
}

@foreach (var a in Model)
{
    <div class="col mt-2">
        <div class="card">
            <div class="card-body p-3">
                @if (a.State == State.End)
                {
                    <div class="end-banner">募集終了</div>
                }
                @{
                    var timeDifference = DateTimeOffset.UtcNow - a.Created;
                    string timeDifferenceString;
                    if (timeDifference.TotalDays >= 1)
                    {
                        timeDifferenceString = $"{(int)timeDifference.TotalDays}日前";
                    }
                    else if (timeDifference.TotalHours >= 1)
                    {
                        timeDifferenceString = $"{(int)timeDifference.TotalHours}時間前";
                    }
                    else if (timeDifference.TotalMinutes >= 1)
                    {
                        timeDifferenceString = $"{(int)timeDifference.TotalMinutes}分前";
                    }
                    else
                    {
                        timeDifferenceString = "たった今";
                    }
                }
                <div class="d-flex flex-wrap">
                    <p class="card-text post-icon f-14 mb-0 me-2 text-secondary text-truncate">
                        <span class="material-symbols-outlined text-secondary me-1 f-14">
                            calendar_month
                        </span>
                        @TimeZoneInfo.ConvertTimeFromUtc(a.Time.UtcDateTime, TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time")).ToString("yyyy/MM/dd HH:mm")
                    </p>

                    <p class="card-text post-icon f-14 text-secondary text-truncate">
                        <span class="material-symbols-outlined text-secondary me-1 f-14">
                            location_on
                        </span>
                        @Html.DisplayFor(modelItem => a.Prefecture)｜@a.Place
                    </p>
                </div>

                <h5 class="card-title mb-1"><a asp-action="Details" asp-route-id="@a.PostId" class="stretched-link">@((a.Title.Length > 30) ? a.Title.Substring(0, 30) + "..." : a.Title)</a><span style="font-size:16px; color:#6c757d">・@timeDifferenceString</span></h5>
                <div class="d-flex align-items-center mb-1">
                    <a asp-controller="Users" asp-action="Profile" asp-route-UserName="@a.UserAccount.UserName" class="stretched-link" style="position: relative;">
                        @if (!string.IsNullOrWhiteSpace(a.UserAccount.ProfilePictureUrl))
                        {
                            <img src="@a.UserAccount.ProfilePictureUrl" alt="Profile Picture" class="profile-icon" />
                        }
                        else
                        {
                            <img src="https://mintsports-profile-img.s3.ap-northeast-1.amazonaws.com/kkrn_icon_user_3.png" alt="Profile Picture" class="profile-icon" />
                        }
                    </a>
                    <a asp-controller="Users" asp-action="Profile" asp-route-UserName="@a.UserAccount.UserName" class="card-text profile-link stretched-link" style="position: relative;">@(a.UserAccount.NickName ?? a.UserAccount.UserName)</a>
                </div>

                <div class="d-flex mb-2">
                    <div class="card-text d-flex align-items-center">
                        <span class="material-symbols-outlined text-secondary me-2 @(a.PaymentType == 0 ? "text-warning" : "")">
                            payments
                        </span>
                        <div class="mb-0 d-flex align-items-center">
                            @if (a.PaymentType == 0)
                            {
                                <p class="mb-0">報酬</p>
                            }
                            else
                            {
                                <p class="mb-0">参加費</p>
                            }
                            <p class="mb-0"> : @a.Reward　円</p>
                        </div>
                    </div>

                    <p class="card-text post-icon ms-auto">
                        <span class="material-symbols-outlined text-secondary me-2 fs-5">
                            sell
                        </span>@Html.DisplayFor(modelItem => a.Genre)
                    </p>
                </div>
                <pre style="white-space: normal;" class="card-text">@((a.Message.Length > 50) ? a.Message.Substring(0, 50) + "..." : a.Message)</pre>
                @if (isLoggedIn && (currentUser != null && a.UserAccountId == currentUser.Id))
                {
                    <div><strong>認証コード：<span style="color:red;">@a.Certification</span></strong></div>
                }

                @{
                    var userAdoptionPosts = ViewData["UserAdoptionPosts"] as Dictionary<int, bool>;
                    var userSubscriptionPosts = ViewData["UserSubscriptionPosts"] as Dictionary<int, bool>;
                }

                <div class="mt-2" style="display: flex; justify-content: space-between; align-items: center;">
                    @if(a.State == State.Recruiting)
                    {
                        <div>
                            <button class="subscription-button btn btn-outline-primary rounded-pill stretched-link" data-post-id="@a.PostId" data-liked-by-user="@(userSubscriptionPosts.ContainsKey(a.PostId) ? userSubscriptionPosts[a.PostId] : false)"
                                data-adopted-by-user="@(userAdoptionPosts.ContainsKey(a.PostId) ? userAdoptionPosts[a.PostId] : false)" style="position: relative; width:100px;">
                                応募する
                            </button>
                            <span class="subscription-count">@(((Dictionary<int, int>)ViewData["SubscriptionCounts"])[a.PostId])</span>
                        </div>
                    }
                    @if (userAdoptionPosts != null && userAdoptionPosts.ContainsKey(a.PostId))
                    {
                        <div style="margin-left: auto;">
                            <a asp-action="VerifyAttendance" asp-controller="RollCalls" asp-route-id="@a.PostId" class="btn btn-success stretched-link" style="position: relative;">参加確認</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}
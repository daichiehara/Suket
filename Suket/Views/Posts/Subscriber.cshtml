@using Microsoft.AspNetCore.Identity;
@model (IEnumerable<UserAccount> Applicants, IEnumerable<UserAccount> Adoptees)
@inject UserManager<UserAccount> userManager;
@inject SignInManager<UserAccount> signInManager;


@{
    ViewData["Title"] = "Subscriber";

    var currentUser = await userManager.GetUserAsync(User);
    bool isLoggedIn = signInManager.IsSignedIn(User) && currentUser != null;

    DateTimeOffset postTimeOffset = (DateTimeOffset)ViewData["PostTime"];
    DateTime postTime = postTimeOffset.UtcDateTime; // UTC時間に変換
    bool isPastPostTime = DateTime.UtcNow > postTime; // UTCの現在時刻を使用

    State postState = (State)ViewData["PostState"];
}
<head>
    <link rel="stylesheet" href="/css/Subscriber.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <!-- Add this to the <head> section of your page or layout -->
    <script src="https://js.stripe.com/v3/"></script>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />

    <style>
        .s-profile-icon {
            margin-right: 8px;
            margin-left: 10px;
            width: 24px;
            height: 24px;
            border-radius: 50%;
        }
    </style>
</head>

<body>
@if (postState == State.End)
{
    <div class="alert alert-warning mt-3">
        募集終了したので新たに採用することはできません。
    </div>
}
else if (postState == State.Cancel)
{
    <div class="alert alert-warning mt-3">
        この募集は中止されたので新たに採用することはできません。
    </div>
}
else if (isPastPostTime)
{
    <div class="alert alert-warning mt-3">
        開催日時が過ぎているので新たに採用することはできません。
    </div>
}

<div class="container">
    <div class="list">
        <div class="header-container">
            <span class="back-arrow btn-primary me-2" onclick="goBackOrHome()" title="back">
                <span class="material-symbols-outlined">
                    arrow_back
                </span>
            </span>
            <h3 class="mb-0">応募者一覧</h3>
        </div>
        <ul id="applicant-list" data-post-id="@ViewData["PostId"]" style="list-style:none;">
            @foreach (var user in Model.Applicants)
            {
                bool isAdopted = Model.Adoptees.Any(a => a.Id == user.Id);
                <li data-user-id="@user.Id">
                    <div class="d-flex align-items-center">
                        @if (!isAdopted && !isPastPostTime && postState != State.Cancel) // 現在の時間がpostのtimeより前の場合のみ表示
                        {
                            <input type="checkbox" class="select-user" data-user-id="@user.Id" data-post-id="@ViewData["PostId"]">
                        }
                        <div style="display: flex; align-items: center;">
                            <a asp-controller="Users" asp-action="Profile" asp-route-UserName="@user.UserName">
                                @if (!string.IsNullOrWhiteSpace(user.ProfilePictureUrl))
                                {
                                    <img src="@user.ProfilePictureUrl" alt="Profile Picture" class="s-profile-icon" />
                                }
                                else
                                {
                                        <img src="https://mintsports-profile-img.s3.ap-northeast-1.amazonaws.com/kkrn_icon_user_3.png" alt="Profile Picture" class="s-profile-icon" />
                                }
                            </a>
                            <a asp-controller="Users" asp-action="Profile" asp-route-UserName="@user.UserName" class="text-decoration-none text-black">@(user.NickName ?? user.UserName)</a>
                        </div>
                    </div>
                </li>
            }
        </ul>
        @if (isLoggedIn && (ViewData["PostUserId"].ToString() == currentUser.Id) && !isPastPostTime && postState != State.Cancel) // 現在の時間がpostのtimeより前の場合のみ表示
        {
            <button id="adopt-selected-users" class="btn btn-primary">選択したユーザーを<br />採用</button>
            <br />
        }

        <!-- Loading Spinner -->
        <div id="loading" class="d-none text-center mt-3">
            <div class="spinner-border text-primary" role="status"></div>
            <div>Loading...</div>
        </div>
        <br />
    </div>


    <div class="list">
        <h3 class ="mb-2 pt-2 ms-4">採用者一覧</h3>
        <ul id="adopted-list" style="list-style:none;">
            @foreach (var user in Model.Adoptees)
            {
                <li data-user-id="@user.Id">
                    <div style="display: flex; align-items: center;">
                        <a asp-controller="Users" asp-action="Profile" asp-route-UserName="@user.UserName">
                            @if (!string.IsNullOrWhiteSpace(user.ProfilePictureUrl))
                            {
                                <img src="@user.ProfilePictureUrl" alt="Profile Picture" class="s-profile-icon" />
                            }
                            else
                            {
                                    <img src="https://mintsports-profile-img.s3.ap-northeast-1.amazonaws.com/kkrn_icon_user_3.png" alt="Profile Picture" class="s-profile-icon" />
                            }
                        </a>
                        <a asp-controller="Users" asp-action="Profile" asp-route-UserName="@user.UserName" class="text-decoration-none text-black">@(user.NickName ?? user.UserName)</a>
                    </div>
                </li>
            }
        </ul>
    </div>
</div>
</body>

@section Scripts {
    <script>
        $(function () {
            $('#adopt-selected-users').click(async function () {
                // Show the spinner
                $('#loading').removeClass('d-none');
                var userIds = [];
                $('.select-user:checked').each(function () {
                    userIds.push($(this).data('user-id'));
                });

                if (userIds.length === 0) {
                    alert('採用するユーザーを選択してください。');
                    $('#loading').addClass('d-none'); // Hide the spinner if no user is selected
                    return;
                }

                var postId = $('#applicant-list').data('post-id');

                var postPaymentType = '@ViewData["PostPaymentType"]';

                // Step 1: Check the reward and decide the flow
                var response = await $.ajax({
                    url: '/Posts/CreateCheckoutSession',
                    method: 'POST',
                    data: { userIds: userIds, postId: postId }
                });

                if (response.reward === 0 || postPaymentType === 'FeeFromParticipant') {
                    // If reward is 0, directly adopt the users
                    $.ajax({
                        url: '/Posts/Adopt',
                        method: 'POST',
                        data: { userIds: userIds, postId: postId },
                        success: function (data) {
                            if (data.success) {
                                // Reload the page to reflect the changes
                                location.reload();
                            } else {
                                alert('Error: ' + data.error);
                                $('#loading').addClass('d-none'); // Hide the spinner in case of an error
                            }
                        }
                    });
                } else {
                    // If there's a reward, proceed with the payment flow
                    //test
                    var stripe = Stripe('pk_test_51NOazSCtzLwFlO8auPQ8fbTs7g3XUGuacXM4ww3cHUQhs4n2wEggHp7IJO4LHN7nKufFIrwEa2SGTO3kavmOat4u00FGyurm7u');
                    //var stripe = Stripe('pk_live_51NOazSCtzLwFlO8aKGf5T9MUhsZ61B6YXYbEfBGJ89WBRWGS9lneiOXIttpzPYPwmdataTumrLyLQO1OhCAQ2nFv00lMQJMfsa');  // Replace with your Stripe public key
                    stripe.redirectToCheckout({
                        sessionId: response.sessionId
                    }).then(function (result) {
                        alert(result.error.message);
                        $('#loading').addClass('d-none'); // Hide the spinner after redirect
                    });
                }
            });
        });


    </script>
}



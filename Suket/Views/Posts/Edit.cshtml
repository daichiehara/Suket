@using Microsoft.AspNetCore.Identity;
@model Suket.Models.Post
@inject UserManager<UserAccount> userManager;
@using System.ComponentModel.DataAnnotations
@using System.Reflection


@{
    ViewData["Title"] = "Edit";
    var currentUser = await userManager.GetUserAsync(User);

    var jstZone = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");
    var jstNow = TimeZoneInfo.ConvertTime(DateTime.Now, jstZone);
}
<head>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
</head>
<style>
    #loadingSpinner {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1051;
    }

    #overlay {
        position: fixed;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1050;
    }

    .header-container {
        display: flex;
        align-items: center; /* 縦方向の中央揃え */
        justify-content: flex-start; /* アイテムを左側に寄せる */
        margin-bottom:10px;
    }

        .header-container .back-arrow {
            margin-right: 20px; /* アイコンとテキストの間に少しスペースを設ける */
        }
</style>

<div id="overlay" class="d-none"></div>

<div id="loadingSpinner" class="d-none text-center">
    <div class="spinner-border text-primary" role="status"></div>
    <div>Loading...</div>
</div>

<div class="header-container">
    <span class="back-arrow btn-primary" onclick="history.back()" title="back">
        <span class="material-symbols-outlined">
            arrow_back
        </span>
    </span>
    <h1 class="text-primary m-0">Postの編集</h1>
</div>

<h4>Post</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" onsubmit="showLoading()">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="PostId" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PeopleCount" class="control-label"></label>
                <input asp-for="PeopleCount" class="form-control" />
                <span asp-validation-for="PeopleCount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Prefecture" class="control-label"></label>
                <select asp-for="Prefecture" asp-items="Html.GetEnumSelectList(typeof (Prefecture))"></select>
                <span asp-validation-for="Prefecture" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Place" class="control-label"></label>
                <input asp-for="Place" class="form-control" />
                <span asp-validation-for="Place" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Time" class="control-label"></label>
                <input asp-for="Time" class="form-control" type="datetime-local" min="@jstNow.ToString("yyyy-MM-ddTHH:mm")" value="@Model.Time.LocalDateTime.ToString("yyyy-MM-ddTHH:mm")" />
                <span asp-validation-for="Time" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Item" class="control-label"></label>
                <input asp-for="Item" class="form-control" />
                <span asp-validation-for="Item" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Reward" class="control-label"></label>（円）
                <input asp-for="Reward" class="form-control" />
                <span asp-validation-for="Reward" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Message" class="control-label"></label>
                <textarea asp-for="Message" class="form-control" rows="5"></textarea>
                <span asp-validation-for="Message" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Genre" class="control-label"></label>
                <select asp-for="Genre" asp-items="Html.GetEnumSelectList(typeof (Genre))"></select>
                <span asp-validation-for="Genre" class="text-danger"></span>
            </div>
            <div class="form-group">
                @foreach (var c in System.Enum.GetValues(typeof(State)).OfType<State>())
                {
                    var member = c.GetType().GetMember(c.ToString()).First();
                    var displayAttribute = member.GetCustomAttribute<DisplayAttribute>();
                    var displayName = displayAttribute?.Name ?? c.ToString();

                    <label asp-for="State">@displayName</label>
                    <input type="radio" asp-for="State" value="@((int)c)" checked="@(Model?.State == c)" />
                }
                <span asp-validation-for="State" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            <input type="hidden" asp-for="UserAccountId" value="@currentUser" />
        </form>
    </div>
</div>


@if (ViewData["Errors"] != null)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData["Errors"] as List<string>)
        {
            <p>@error</p>
        }
    </div>
}

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        function showLoading() {
            document.getElementById('loadingSpinner').classList.remove('d-none');
            document.getElementById('overlay').classList.remove('d-none');
        }

        function hideLoading() {
            document.getElementById('loadingSpinner').classList.add('d-none');
            document.getElementById('overlay').classList.add('d-none');
        }
    </script>
}


